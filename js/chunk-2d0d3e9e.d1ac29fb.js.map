{"version":3,"sources":["webpack:///./src/views/bioInfo/Bio-boxplot-group2.vue","webpack:///./src/views/bioInfo/Bio-boxplot-group2.vue?fc79"],"names":["id","name","margin","top","right","bottom","left","width","height","svg","d3","append","attr","json","data1","JSON","parse","sumstat","d","quanti","p","map","g","Expr","sort","q1","median","q3","interQuantileRange","min","max","Gene","Group","item","key","value","boxWidth","x","range","domain","paddingInner","paddingOuter","call","y","offsetX","zygote","selectAll","data","enter","substring","style","colorMap","render","__scopeId"],"mappings":"kPACOA,GAAG,kB,6EAAR,yBAEM,MAFN,K,gBASa,+BAAgB,CAC7BC,KAAM,qBACN,QACE,uBAAU,KAGR,MAAMC,EAAS,CAAEC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACjDC,EAAQ,IAAML,EAAOI,KAAOJ,EAAOE,MACnCI,EAAS,IAAMN,EAAOC,IAAMD,EAAOG,OAGnCI,EAAMC,EAAA,KACF,mBACPC,OAAO,OACPC,KAAK,QAASL,EAAQL,EAAOI,KAAOJ,EAAOE,OAC3CQ,KAAK,SAAUJ,EAASN,EAAOC,IAAMD,EAAOG,QAC5CM,OAAO,KACPC,KAAK,YAAa,aAAaV,EAAOI,QAAQJ,EAAOC,QAElDU,EAAO,u9FAuEPC,EAAQC,KAAKC,MAAMH,GAKnBI,EAAUP,EAAA,KACLI,EAAOI,IACd,MAAMC,EAASC,GAAKV,EAAA,KAAYQ,EAAEG,IAAIC,GAAKA,EAAEC,MAAMC,KAAKd,EAAA,MAAeU,GACjEK,EAAKN,EAAO,KACZO,EAASP,EAAO,IAChBQ,EAAKR,EAAO,KACZS,EAAqBD,EAAKF,EAC1BI,EAAMJ,EAAK,GAAMG,EACjBE,EAAMH,EAAK,EAAIC,EACrB,MAAO,CAAEH,KAAIC,SAAQC,KAAIC,qBAAoBC,MAAKC,QACjDZ,GAAcA,EAAEa,KAAOb,EAAEc,OAC3BX,IAAIY,IAAQ,CAAGC,IAAKD,EAAK,GAAIE,MAAOF,EAAK,MAGtCG,EAAW,GACXC,EAAI3B,EAAA,OAEP4B,MAAM,CAAC,EAAG/B,IACVgC,OAAO,CAAC,IAAK,IAAK,IAAK,MACvBC,aAAa,GACbC,aAAa,IAChBhC,EACGE,OAAO,KACPC,KAAK,YAAa,eAAeJ,MACjCkC,KAAKhC,EAAA,KAAc2B,IAGtB,MAAMM,EAAIjC,EAAA,OAEP6B,OAAO,CAAC,EAAG,KACXD,MAAM,CAAC9B,EAAQ,IAClBC,EAAIE,OAAO,KAAK+B,KAAKhC,EAAA,KAAYiC,IAEjC,MAAMC,EAAU,CACd,UAAsB,IAAXR,EAAiB,GAC5B,QAAS,EACTS,OAAoB,IAAXT,EAAiB,GAI5B3B,EACGqC,UAAU,aACVC,KAAK9B,GACL+B,QACArC,OAAO,QACPC,KAAK,KAAMM,GAAKmB,EAAEnB,EAAEgB,IAAIe,UAAU,EAAG,IAAML,EAAQ1B,EAAEgB,IAAIe,UAAU,KACnErC,KAAK,KAAMM,GAAKmB,EAAEnB,EAAEgB,IAAIe,UAAU,EAAG,IAAML,EAAQ1B,EAAEgB,IAAIe,UAAU,KACnErC,KAAK,KAAMM,GAAKyB,EAAEzB,EAAEiB,MAAMN,MAC1BjB,KAAK,KAAMM,GAAKyB,EAAEzB,EAAEiB,MAAML,MAC1BlB,KAAK,SAAU,SACfsC,MAAM,QAAS,IAGlB,MAAMC,EAAW,CACf,QAAS,UACT,QAAS,UACTN,OAAQ,WAGVpC,EACGqC,UAAU,SACVC,KAAK9B,GACL+B,QACArC,OAAO,QACPC,KAAK,IAAKM,GAAKmB,EAAEnB,EAAEgB,IAAIe,UAAU,EAAG,IAAML,EAAQ1B,EAAEgB,IAAIe,UAAU,IAAMb,EAAW,GACnFxB,KAAK,IAAKM,GAAKyB,EAAEzB,EAAEiB,MAAMR,KACzBf,KAAK,SAAUM,GAAKyB,EAAEzB,EAAEiB,MAAMV,IAAMkB,EAAEzB,EAAEiB,MAAMR,KAE9Cf,KAAK,QAASwB,GACdxB,KAAK,SAAU,SACfsC,MAAM,OAAQhC,GACNiC,EAASjC,EAAEgB,IAAIe,UAAU,KAIpCxC,EACGqC,UAAU,eACVC,KAAK9B,GACL+B,QACArC,OAAO,QACPC,KAAK,KAAMM,GAAKmB,EAAEnB,EAAEgB,IAAIe,UAAU,EAAG,IAAML,EAAQ1B,EAAEgB,IAAIe,UAAU,IAAMb,EAAW,GACpFxB,KAAK,KAAMM,GAAKmB,EAAEnB,EAAEgB,IAAIe,UAAU,EAAG,IAAML,EAAQ1B,EAAEgB,IAAIe,UAAU,IAAMb,EAAW,GACpFxB,KAAK,KAAMM,GAAKyB,EAAEzB,EAAEiB,MAAMT,SAC1Bd,KAAK,KAAMM,GAAKyB,EAAEzB,EAAEiB,MAAMT,SAC1Bd,KAAK,SAAU,SACfsC,MAAM,QAAS,SC3LxB,EAAOE,OAASA,EAChB,EAAOC,UAAY,kBAEJ","file":"js/chunk-2d0d3e9e.d1ac29fb.js","sourcesContent":["<template>\n  <div id='svg-contrainer'>\n\n  </div>\n</template>\n\n<script>\nimport { defineComponent, onMounted } from 'vue'\nimport * as d3 from 'd3'\n\nexport default defineComponent({\n  name: 'Bio-boxplot-group2',\n  setup () {\n    onMounted(() => {\n      // set the dimensions and margins of the graph\n      // set the dimensions and margins of the graph\n      const margin = { top: 10, right: 30, bottom: 30, left: 40 }\n      const width = 800 - margin.left - margin.right\n      const height = 400 - margin.top - margin.bottom\n\n      // append the svg object to the body of the page\n      const svg = d3\n        .select('#svg-contrainer')\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`)\n\n      const json = `[\n{\"Gene\":\"A\",\"Group\":\"zygote\",\"Expr\":\"0.8\"},\n{\"Gene\":\"A\",\"Group\":\"zygote\",\"Expr\":\"1.3\"},\n{\"Gene\":\"A\",\"Group\":\"zygote\",\"Expr\":\"1.4\"},\n{\"Gene\":\"A\",\"Group\":\"zygote\",\"Expr\":\"0.9\"},\n{\"Gene\":\"A\",\"Group\":\"zygote\",\"Expr\":\"1.9\"},\n{\"Gene\":\"A\",\"Group\":\"zygote\",\"Expr\":\"1.2\"},\n{\"Gene\":\"A\",\"Group\":\"2cell\",\"Expr\":\"8\"},\n{\"Gene\":\"A\",\"Group\":\"2cell\",\"Expr\":\"13\"},\n{\"Gene\":\"A\",\"Group\":\"2cell\",\"Expr\":\"14\"},\n{\"Gene\":\"A\",\"Group\":\"2cell\",\"Expr\":\"9\"},\n{\"Gene\":\"A\",\"Group\":\"2cell\",\"Expr\":\"19\"},\n{\"Gene\":\"A\",\"Group\":\"2cell\",\"Expr\":\"12\"},\n{\"Gene\":\"A\",\"Group\":\"4cell\",\"Expr\":\"3.2\"},\n{\"Gene\":\"A\",\"Group\":\"4cell\",\"Expr\":\"5.2\"},\n{\"Gene\":\"A\",\"Group\":\"4cell\",\"Expr\":\"5.6\"},\n{\"Gene\":\"A\",\"Group\":\"4cell\",\"Expr\":\"3.6\"},\n{\"Gene\":\"A\",\"Group\":\"4cell\",\"Expr\":\"7.6\"},\n{\"Gene\":\"A\",\"Group\":\"4cell\",\"Expr\":\"4.8\"},\n{\"Gene\":\"B\",\"Group\":\"zygote\",\"Expr\":\"0.8\"},\n{\"Gene\":\"B\",\"Group\":\"zygote\",\"Expr\":\"1.3\"},\n{\"Gene\":\"B\",\"Group\":\"zygote\",\"Expr\":\"1.4\"},\n{\"Gene\":\"B\",\"Group\":\"zygote\",\"Expr\":\"1.9\"},\n{\"Gene\":\"B\",\"Group\":\"zygote\",\"Expr\":\"1.2\"},\n{\"Gene\":\"B\",\"Group\":\"2cell\",\"Expr\":\"8\"},\n{\"Gene\":\"B\",\"Group\":\"2cell\",\"Expr\":\"13\"},\n{\"Gene\":\"B\",\"Group\":\"2cell\",\"Expr\":\"14\"},\n{\"Gene\":\"B\",\"Group\":\"2cell\",\"Expr\":\"9\"},\n{\"Gene\":\"B\",\"Group\":\"2cell\",\"Expr\":\"19\"},\n{\"Gene\":\"B\",\"Group\":\"2cell\",\"Expr\":\"12\"},\n{\"Gene\":\"B\",\"Group\":\"4cell\",\"Expr\":\"3.2\"},\n{\"Gene\":\"B\",\"Group\":\"4cell\",\"Expr\":\"5.2\"},\n{\"Gene\":\"B\",\"Group\":\"4cell\",\"Expr\":\"5.6\"},\n{\"Gene\":\"B\",\"Group\":\"4cell\",\"Expr\":\"3.6\"},\n{\"Gene\":\"B\",\"Group\":\"4cell\",\"Expr\":\"7.6\"},\n{\"Gene\":\"B\",\"Group\":\"4cell\",\"Expr\":\"4.8\"},\n{\"Gene\":\"C\",\"Group\":\"zygote\",\"Expr\":\"0.8\"},\n{\"Gene\":\"C\",\"Group\":\"zygote\",\"Expr\":\"1.3\"},\n{\"Gene\":\"C\",\"Group\":\"zygote\",\"Expr\":\"1.4\"},\n{\"Gene\":\"C\",\"Group\":\"zygote\",\"Expr\":\"1.9\"},\n{\"Gene\":\"C\",\"Group\":\"zygote\",\"Expr\":\"1.2\"},\n{\"Gene\":\"C\",\"Group\":\"2cell\",\"Expr\":\"8\"},\n{\"Gene\":\"C\",\"Group\":\"2cell\",\"Expr\":\"13\"},\n{\"Gene\":\"C\",\"Group\":\"2cell\",\"Expr\":\"14\"},\n{\"Gene\":\"C\",\"Group\":\"2cell\",\"Expr\":\"9\"},\n{\"Gene\":\"C\",\"Group\":\"2cell\",\"Expr\":\"19\"},\n{\"Gene\":\"C\",\"Group\":\"2cell\",\"Expr\":\"12\"},\n{\"Gene\":\"C\",\"Group\":\"4cell\",\"Expr\":\"3.2\"},\n{\"Gene\":\"C\",\"Group\":\"4cell\",\"Expr\":\"5.2\"},\n{\"Gene\":\"C\",\"Group\":\"4cell\",\"Expr\":\"5.6\"},\n{\"Gene\":\"C\",\"Group\":\"4cell\",\"Expr\":\"3.6\"},\n{\"Gene\":\"C\",\"Group\":\"4cell\",\"Expr\":\"7.6\"},\n{\"Gene\":\"C\",\"Group\":\"4cell\",\"Expr\":\"4.8\"},\n{\"Gene\":\"D\",\"Group\":\"zygote\",\"Expr\":\"0.8\"},\n{\"Gene\":\"D\",\"Group\":\"zygote\",\"Expr\":\"1.3\"},\n{\"Gene\":\"D\",\"Group\":\"zygote\",\"Expr\":\"1.4\"},\n{\"Gene\":\"D\",\"Group\":\"zygote\",\"Expr\":\"1.9\"},\n{\"Gene\":\"D\",\"Group\":\"zygote\",\"Expr\":\"1.2\"},\n{\"Gene\":\"D\",\"Group\":\"2cell\",\"Expr\":\"8\"},\n{\"Gene\":\"D\",\"Group\":\"2cell\",\"Expr\":\"13\"},\n{\"Gene\":\"D\",\"Group\":\"2cell\",\"Expr\":\"14\"},\n{\"Gene\":\"D\",\"Group\":\"2cell\",\"Expr\":\"9\"},\n{\"Gene\":\"D\",\"Group\":\"2cell\",\"Expr\":\"19\"},\n{\"Gene\":\"D\",\"Group\":\"2cell\",\"Expr\":\"12\"},\n{\"Gene\":\"D\",\"Group\":\"4cell\",\"Expr\":\"3.2\"},\n{\"Gene\":\"D\",\"Group\":\"4cell\",\"Expr\":\"5.2\"},\n{\"Gene\":\"D\",\"Group\":\"4cell\",\"Expr\":\"5.6\"},\n{\"Gene\":\"D\",\"Group\":\"4cell\",\"Expr\":\"3.6\"},\n{\"Gene\":\"D\",\"Group\":\"4cell\",\"Expr\":\"7.6\"},\n{\"Gene\":\"D\",\"Group\":\"4cell\",\"Expr\":\"4.8\"}\n]`\n      const data1 = JSON.parse(json)\n\n      // Read the data and compute summary statistics for each specie\n\n      // Compute quartiles, median, inter quantile range min and max --> these info are then used to draw the box.\n      const sumstat = d3\n        .rollups(data1, d => {\n          const quanti = p => d3.quantile(d.map(g => g.Expr).sort(d3.ascending), p)\n          const q1 = quanti(0.25)\n          const median = quanti(0.5)\n          const q3 = quanti(0.75)\n          const interQuantileRange = q3 - q1\n          const min = q1 - 0.2 * interQuantileRange\n          const max = q3 + 1 * interQuantileRange\n          return { q1, median, q3, interQuantileRange, min, max }\n        }, d => { return d.Gene + d.Group })\n        .map(item => ({ key: item[0], value: item[1] }))\n\n      //   Show the X scale\n      const boxWidth = 20\n      const x = d3\n        .scaleBand()\n        .range([0, width])\n        .domain(['A', 'B', 'C', 'D'])\n        .paddingInner(1)\n        .paddingOuter(0.5)\n      svg\n        .append('g')\n        .attr('transform', `translate(0,${height})`)\n        .call(d3.axisBottom(x))\n\n      // Show the Y scale\n      const y = d3\n        .scaleLinear()\n        .domain([0, 15])\n        .range([height, 0])\n      svg.append('g').call(d3.axisLeft(y))\n\n      const offsetX = {\n        '2cell': -(boxWidth * 1.5 + 2),\n        '4cell': 0,\n        zygote: (boxWidth * 1.5 + 2)\n      }\n\n      // Show the main vertical line\n      svg\n        .selectAll('vertLines')\n        .data(sumstat)\n        .enter()\n        .append('line')\n        .attr('x1', d => x(d.key.substring(0, 1)) + offsetX[d.key.substring(1)])\n        .attr('x2', d => x(d.key.substring(0, 1)) + offsetX[d.key.substring(1)])\n        .attr('y1', d => y(d.value.min))\n        .attr('y2', d => y(d.value.max))\n        .attr('stroke', 'black')\n        .style('width', 40)\n\n      // rectangle for the main box\n      const colorMap = {\n        '2cell': '#80deea',\n        '4cell': '#8cd842',\n        zygote: '#ffb7da'\n      }\n\n      svg\n        .selectAll('boxes')\n        .data(sumstat)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.key.substring(0, 1)) + offsetX[d.key.substring(1)] - boxWidth / 2)\n        .attr('y', d => y(d.value.q3))\n        .attr('height', d => y(d.value.q1) - y(d.value.q3)\n        )\n        .attr('width', boxWidth)\n        .attr('stroke', 'black')\n        .style('fill', d => {\n          return colorMap[d.key.substring(1)]\n        })\n\n      // Show the median\n      svg\n        .selectAll('medianLines')\n        .data(sumstat)\n        .enter()\n        .append('line')\n        .attr('x1', d => x(d.key.substring(0, 1)) + offsetX[d.key.substring(1)] - boxWidth / 2)\n        .attr('x2', d => x(d.key.substring(0, 1)) + offsetX[d.key.substring(1)] + boxWidth / 2)\n        .attr('y1', d => y(d.value.median))\n        .attr('y2', d => y(d.value.median))\n        .attr('stroke', 'black')\n        .style('width', 80)\n    })\n  }\n})\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n</style>\n","import { render } from \"./Bio-boxplot-group2.vue?vue&type=template&id=e8c88adc&scoped=true\"\nimport script from \"./Bio-boxplot-group2.vue?vue&type=script&lang=js\"\nexport * from \"./Bio-boxplot-group2.vue?vue&type=script&lang=js\"\nscript.render = render\nscript.__scopeId = \"data-v-e8c88adc\"\n\nexport default script"],"sourceRoot":""}