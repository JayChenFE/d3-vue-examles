{"version":3,"sources":["webpack:///./src/views/bioInfo/Bio-boxplot-horizontal.vue?881a","webpack:///./src/views/bioInfo/Bio-boxplot-horizontal.vue","webpack:///./src/views/bioInfo/Bio-boxplot-horizontal.vue?cee7"],"names":["id","name","margin","top","right","bottom","left","width","height","svg","d3","append","attr","then","data","sumstat","d","quanti","p","map","g","Sepal_Length","sort","q1","median","q3","interQuantileRange","min","max","Species","item","key","value","y","range","domain","padding","call","tickSize","select","remove","x","ticks","myColor","interpolator","text","selectAll","enter","bandwidth","style","tooltip","mouseover","event","transition","duration","html","clientX","clientY","mousemove","mouseleave","jitterWidth","Math","random","on","render"],"mappings":"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","file":"js/chunk-328bc370.8726309f.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Bio-boxplot-horizontal.vue?vue&type=style&index=0&id=af9b6104&lang=scss\"","<template>\n  <div id='svg-contrainer'>\n\n  </div>\n</template>\n\n<script>\nimport { defineComponent, onMounted } from 'vue'\nimport * as d3 from 'd3'\n\nexport default defineComponent({\n  name: 'Bio-boxplot-horizontal',\n  setup () {\n    onMounted(() => {\n      const margin = { top: 10, right: 30, bottom: 30, left: 80 }\n      const width = 460 - margin.left - margin.right\n      const height = 400 - margin.top - margin.bottom\n\n      // append the svg object to the body of the page\n      const svg = d3\n        .select('#svg-contrainer')\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`)\n\n      // Read the data and compute summary statistics for each specie\n      d3.csv('https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/iris.csv')\n        .then(data => {\n          // Compute quartiles, median, inter quantile range min and max --> these info are then used to draw the box.\n          const sumstat = d3\n            .rollups(data, d => {\n              const quanti = p => d3.quantile(d.map(g => g.Sepal_Length).sort(d3.ascending), p)\n              const q1 = quanti(0.25)\n              const median = quanti(0.5)\n              const q3 = quanti(0.75)\n              const interQuantileRange = q3 - q1\n              const min = q1 - 1.5 * interQuantileRange\n              const max = q3 + 1.5 * interQuantileRange\n              return { q1, median, q3, interQuantileRange, min, max }\n            }, d => d.Species)\n            .map(item => ({ key: item[0], value: item[1] }))\n\n          // Show the Y scale\n          const y = d3\n            .scaleBand()\n            .range([height, 0])\n            .domain(['setosa', 'versicolor', 'virginica'])\n            .padding(0.4)\n          svg\n            .append('g')\n            .call(d3.axisLeft(y).tickSize(0))\n            .select('.domain')\n            .remove()\n\n          // Show the X scale\n          const x = d3\n            .scaleLinear()\n            .domain([4, 8])\n            .range([0, width])\n          svg\n            .append('g')\n            .attr('transform', `translate(0,${height})`)\n            .call(d3.axisBottom(x).ticks(5))\n            .select('.domain')\n            .remove()\n\n          // Color scale\n          const myColor = d3\n            .scaleSequential()\n            .interpolator(d3.interpolateInferno)\n            .domain([4, 8])\n\n          // Add X axis label:\n          svg\n            .append('text')\n            .attr('text-anchor', 'end')\n            .attr('x', width)\n            .attr('y', height + margin.top + 30)\n            .text('Sepal Length')\n\n          // Show the main vertical line\n          svg\n            .selectAll('vertLines')\n            .data(sumstat)\n            .enter()\n            .append('line')\n            .attr('x1', d => {\n              return x(d.value.min)\n            })\n            .attr('x2', d => {\n              return x(d.value.max)\n            })\n            .attr('y1', d => {\n              return y(d.key) + y.bandwidth() / 2\n            })\n            .attr('y2', d => {\n              return y(d.key) + y.bandwidth() / 2\n            })\n            .attr('stroke', 'black')\n            .style('width', 40)\n\n          // rectangle for the main box\n          svg\n            .selectAll('boxes')\n            .data(sumstat)\n            .enter()\n            .append('rect')\n            .attr('x', d => x(d.value.q1)) // console.log(x(d.value.q1)) ;\n            .attr('width', d => x(d.value.q3) - x(d.value.q1)) // console.log(x(d.value.q3)-x(d.value.q1))\n            .attr('y', d => y(d.key))\n            .attr('height', y.bandwidth())\n            .attr('stroke', 'black')\n            .style('fill', '#69b3a2')\n            .style('opacity', 0.3)\n\n          // Show the median\n          svg\n            .selectAll('medianLines')\n            .data(sumstat)\n            .enter()\n            .append('line')\n            .attr('y1', d => y(d.key))\n            .attr('y2', d => y(d.key) + y.bandwidth() / 2)\n            .attr('x1', d => x(d.value.median))\n            .attr('x2', d => x(d.value.median))\n            .attr('stroke', 'black')\n            .style('width', 80)\n\n          // create a tooltip\n          const tooltip = d3\n            .select('#svg-contrainer')\n            .append('div')\n            .style('opacity', 0)\n            .attr('class', 'tooltip')\n            .style('font-size', '16px')\n          // Three function that change the tooltip when user hover / move / leave a cell\n          const mouseover = function (event, d) {\n            tooltip.transition()\n              .duration(200)\n              .style('opacity', 1)\n\n            tooltip.html(`<span style='color:grey'>Sepal length: </span>${d.Sepal_Length}`) // + d.Prior_disorder + \"<br>\" + \"HR: \" +  d.HR)\n              .style('left', `${event.clientX + 30}px`)\n              .style('top', `${event.clientY + 30}px`)\n          }\n          const mousemove = function (event) {\n            tooltip.style('left', `${d3.pointer(event)[0] + 30}px`)\n              .style('top', `${d3.pointer(event)[1] + 30}px`)\n          }\n          const mouseleave = () => {\n            tooltip.transition()\n              .duration(200)\n              .style('opacity', 0)\n          }\n\n          // Add individual points with jitter\n          const jitterWidth = 50\n          svg.selectAll('indPoints')\n            .data(data)\n            .enter()\n            .append('circle')\n            .attr('cx', d => x(d.Sepal_Length))\n            .attr('cy', d =>\n              y(d.Species) + y.bandwidth() / 2 - jitterWidth / 2 + Math.random() * jitterWidth)\n            .attr('r', 4)\n            .style('fill', d => myColor(+d.Sepal_Length))\n            .attr('stroke', 'black')\n            .on('mouseover', mouseover)\n            .on('mousemove', mousemove)\n            .on('mouseleave', mouseleave)\n        })\n    })\n  }\n\n})\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style  lang=\"scss\">\n#svg-contrainer {\n  position: relative;\n\n  .tooltip {\n  position: absolute;\n  background-color: black;\n  border: none;\n  border-radius: 5px;\n  padding: 15px;\n  min-width: 100px;\n  text-align: left;\n  color: white;\n}\n}\n\n</style>\n","import { render } from \"./Bio-boxplot-horizontal.vue?vue&type=template&id=af9b6104\"\nimport script from \"./Bio-boxplot-horizontal.vue?vue&type=script&lang=js\"\nexport * from \"./Bio-boxplot-horizontal.vue?vue&type=script&lang=js\"\n\nimport \"./Bio-boxplot-horizontal.vue?vue&type=style&index=0&id=af9b6104&lang=scss\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}